package guestbook.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import guestbook.model.Message;
import jdbc.JdbcUtil;

public class MessageDao {
	private static MessageDao messageDao = new MessageDao();
	public static MessageDao getInstance() {
		return messageDao;
	}
	
	private MessageDao() {}
	
	public int insert(Connection conn, Message message) throws SQLException{
		PreparedStatement pstmt = null;
		try {
				pstmt = conn.prepareStatement(
						"insert into guestbook_message " + 
						"(guest_name, password, message) values(?, ?, ?)");
				pstmt.setString(1,  message.getGuestName());
				pstmt.setString(2,  message.getPassword());
				pstmt.setString(3,  message.getMessage());
				return pstmt.executeUpdate();
				//executeUpdate() 메서드는 쿼리를 실행하고 그 결과로 변경된 레코드의 개수를 리턴.
		}finally {
			JdbcUtil.close(pstmt);
		}
	}
	
	public Message select(Connection conn, int messageId) throws SQLException {
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			pstmt = conn.prepareStatement(
					"select * from guestbook_message where message_id = ?");
			pstmt.setInt(1,  messageId);
			rs = pstmt.executeQuery(); //executeQuery() : select쿼리를 실행할 때 사용. ResultSet을 결과값으로 리턴
			if(rs.next()) {
				return makeMessageFromResultSet(rs);
			} else {
				return null;
			}
		}finally {
			JdbcUtil.close(rs);
			JdbcUtil.close(pstmt);
		}
	}
	
	private Message makeMessageFromResultSet(ResultSet rs) throws SQLException {
		Message message = new Message();
		message.setId(rs.getInt("message_id"));
		message.setGuestName(rs.getString("guest_name"));
		message.setPassword(rs.getString("password"));
		message.setMessage(rs.getString("message"));
		return message;
	}
	
	public int selectCount(Connection conn) throws SQLException{
		Statement stmt = null;
		ResultSet rs = null;
		try {
			stmt = conn.createStatement();
			rs = stmt.executeQuery("select count(*) from guestbook_message"); //테이블의 레코드 개수 
			rs.next(); //rs.next() 메서드는 커서의 다음 행이 존재하는 경우 true를 리턴하고 커서를 그 행으로 이동 시킨다.
			return rs.getInt(1); //지정한 칼럼 값을 int 타입으로 읽어온다.
			
		} finally{
			JdbcUtil.close(rs);
			JdbcUtil.close(stmt);
		}
	}
	
	
	

}
